import numpy as np
import pandas as pd
import statsmodels.api as sm

# Generate sample data (replace with your actual dataset)
np.random.seed(42)
num_samples = 100

# Independent variables (X1 to X5)
X1 = np.random.rand(num_samples) * 10
X2 = np.random.rand(num_samples) * 5
X3 = np.random.rand(num_samples) * 20
X4 = np.random.rand(num_samples) * 15
X5 = np.random.rand(num_samples) * 8

# Dependent variable (Y) with some noise
Y = 3.5 * X1 + 2.1 * X2 - 1.3 * X3 + 0.8 * X4 + 4.2 * X5 + np.random.randn(num_samples) * 5

# Create a DataFrame
df = pd.DataFrame({'X1': X1, 'X2': X2, 'X3': X3, 'X4': X4, 'X5': X5, 'Y': Y})

# Define independent variables (X) and add a constant for the intercept
X = df[['X1', 'X2', 'X3', 'X4', 'X5']]
X = sm.add_constant(X)  # Adds an intercept term

# Define dependent variable (Y)
y = df['Y']

# Perform regression analysis
model = sm.OLS(y, X).fit()

# Print regression summary
print(model.summary())

# Extract confidence intervals (95%)
conf_intervals = model.conf_int(alpha=0.05)
print("\n95% Confidence Intervals for Coefficients:")
print(conf_intervals)
